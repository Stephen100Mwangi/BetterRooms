"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseJWT = void 0;
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const parseJWT = (token) => {
    let user = jsonwebtoken_1.default.decode(token.substring(16), { json: true });
    // try again without assuming the userHash is there
    if (!user) {
        user = jsonwebtoken_1.default.decode(token, { json: true });
    }
    if (!user) {
        throw new RangeError('Invalid JWT');
    }
    return user;
};
exports.parseJWT = parseJWT;
class User {
    constructor(authorization) {
        this.creatorID = 0;
        this.name = '';
        this.email = '';
        if (!this.isAPIKey(authorization)) {
            const { id, name, email } = exports.parseJWT(authorization);
            this.creatorID = id;
            this.name = name;
            this.email = email;
        }
    }
    // eslint-disable-next-line class-methods-use-this
    isAPIKey(authorization) {
        return authorization.startsWith('VF.');
    }
}
exports.default = User;
//# sourceMappingURL=user.js.map