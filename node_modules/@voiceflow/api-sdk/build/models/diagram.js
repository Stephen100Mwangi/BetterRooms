"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDiagram = void 0;
const s = __importStar(require("superstruct"));
const shared_1 = require("./shared");
exports.SDiagram = s.object({
    _id: shared_1.SDiagramID,
    name: shared_1.SName,
    versionID: shared_1.SVersionID,
    creatorID: shared_1.SCreatorID,
    variables: s.array(shared_1.SVariable),
    offsetX: s.number(),
    offsetY: s.number(),
    zoom: s.number(),
    nodes: s.record(shared_1.SNodeID, shared_1.SDiagramNode),
    children: s.array(shared_1.SDiagramID),
    modified: shared_1.STimestamp,
});
//# sourceMappingURL=diagram.js.map