import * as s from 'superstruct';
import { Command, Node, NodeID } from './shared';
export declare const SProgram: s.Struct<{
    id: string;
    commands: (Record<string, any> & {
        type: string;
    })[];
    variables: string[];
    startId: string;
    skill_id: string;
    lines: Record<string, Record<string, any> & {
        type: string;
        id: string;
    }>;
}, {
    id: s.Struct<string, any>;
    startId: s.Struct<string, any>;
    skill_id: s.Struct<string, any>;
    lines: s.Struct<Record<string, Record<string, any> & {
        type: string;
        id: string;
    }>, any>;
    commands: s.Struct<(Record<string, any> & {
        type: string;
    })[], s.Struct<Record<string, any> & {
        type: string;
    }, any>>;
    variables: s.Struct<string[], s.Struct<string, any>>;
}>;
export declare type Program<N extends Node = Node, C extends Command = Command> = Omit<s.StructType<typeof SProgram>, 'lines' | 'commands'> & {
    lines: Record<NodeID, N>;
    commands: C[];
};
