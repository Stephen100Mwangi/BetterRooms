import { Event, EventType } from "../../Lifecycle";
import Frame, { State as FrameState } from './Frame';
declare type Handlers = {
    didChange?: (event: Event<EventType.stackDidChange>) => void;
    willChange?: (event: Event<EventType.stackWillChange>) => void;
};
declare class Stack {
    private handlers;
    static getFrames(stack: FrameState[]): Frame[];
    private frames;
    constructor(stack: FrameState[] | undefined, handlers: Handlers);
    getState(): FrameState[];
    getSize(): number;
    get(index: number): Frame;
    top(): Frame;
    updateFrames(nextFrames: Frame[]): void;
    pop(): Frame | undefined;
    popTo(index: number): void;
    lift(depth?: number): void;
    push(frame: Frame): void;
    update(frames: FrameState[]): void;
    getFrames(): Frame[];
    isEmpty(): boolean;
    flush(): void;
}
export { Frame, FrameState };
export default Stack;
