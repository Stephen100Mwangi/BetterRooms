/**
 * Stack Frame documentation
 * @packageDocumentation
 */
import { Command } from '@voiceflow/api-sdk';
import ProgramModel from "../../../Program";
import Store, { State as StoreState } from '../../Store';
export interface State {
    nodeID?: string | null;
    programID: string;
    storage: StoreState;
    commands?: Command[];
    variables: StoreState;
}
export interface Options {
    nodeID?: string | null;
    programID: string;
    storage?: StoreState;
    commands?: Command[];
    variables?: StoreState;
    blockID?: string | null;
    diagramID?: string;
}
declare class Frame {
    private initialized;
    private nodeID?;
    private startNodeID;
    private programID;
    private commands;
    storage: Store;
    variables: Store;
    constructor(frameState: Options);
    getState(): State;
    initialize(program: ProgramModel): void;
    /**
     * Get the frame's node id.
     *
     * @remarks
     * Some remark for getNodeID().
     *
     * @returns the frame's node id
     *
     * @example
     * Here's a simple usage example
     * ```typescript
     *  const nodeID = frame.getNodeID();
     * ```
     */
    getNodeID(): string | null | undefined;
    /**
     * Set the frame's node id.
     *
     * @remarks
     * Some remark for setNodeID().
     *
     * @param nodeID - the node id to set
     * @returns void
     *
     * @example
     * Here's a simple usage example
     * ```typescript
     *  const newNodeID = '123abc';
     *  frame.setNodeID(newNodeID);
     * ```
     */
    setNodeID(nodeID?: string | null): void;
    getProgramID(): string;
    setProgramID(programID: string): void;
    getCommands(): Command[];
}
export default Frame;
