"use strict";
/* eslint-disable @typescript-eslint/no-empty-function */
Object.defineProperty(exports, "__esModule", { value: true });
exports.debugSerializer = exports.fullSerializer = exports.shortSerializer = exports.noSerializer = exports.errorSerializer = void 0;
const pino_1 = require("@voiceflow/pino");
exports.errorSerializer = (err) => {
    var _a, _b, _c;
    const lines = (_a = err.stack) === null || _a === void 0 ? void 0 : _a.split('\n').filter((str) => !str.match(/node_modules\/|\\|\\\\(pino|@voiceflow\/|\\|\\\\logger)/));
    err.stack = lines === null || lines === void 0 ? void 0 : lines.join('');
    if (err.isAxiosError) {
        return pino_1.stdSerializers.err((_c = (_b = err.toJSON) === null || _b === void 0 ? void 0 : _b.call(err)) !== null && _c !== void 0 ? _c : err);
    }
    return pino_1.stdSerializers.err(err);
};
exports.noSerializer = {
    err: () => { },
    req: () => { },
    res: () => { },
    traceID: () => { },
    responseTime: () => { },
};
exports.shortSerializer = {
    err: exports.errorSerializer,
    req: ({ url }) => ({ url }),
    res: ({ statusCode }) => statusCode,
    responseTime: () => { },
};
exports.fullSerializer = {
    err: exports.errorSerializer,
    req: pino_1.stdSerializers.req,
    res: pino_1.stdSerializers.res,
};
exports.debugSerializer = {
    err: exports.errorSerializer,
    req(req) {
        req.body = req.raw.body;
        return req;
    },
    res(res) {
        res.body = res.raw.body;
        return res;
    },
};
//# sourceMappingURL=utils.js.map