import type { Chip } from '../button';
import { ActionPayload } from './action';
export * as Action from './action';
export declare enum RequestType {
    TEXT = "text",
    ACTION = "action",
    INTENT = "intent",
    LAUNCH = "launch"
}
export interface RequestConfig {
    tts?: boolean;
    stopAll?: boolean;
    stripSSML?: boolean;
    stopTypes?: string[];
    excludeTypes?: string[];
}
export interface VerboseValue {
    rawText: string;
    canonicalText: string;
    startIndex: number;
}
export interface Entity {
    name: string;
    value: string;
    query?: string;
    verboseValue?: VerboseValue[];
}
export interface LabelRequestPayload {
    label?: string;
}
export interface BaseRequest<P = unknown> {
    type: string;
    payload: P;
}
export interface LaunchRequest extends BaseRequest<undefined> {
    type: RequestType.LAUNCH;
}
export interface TextRequest extends BaseRequest<string> {
    type: RequestType.TEXT;
}
interface ActionAndLabelRequestPayload extends ActionPayload, LabelRequestPayload {
}
export interface IntentRequestPayload extends ActionAndLabelRequestPayload {
    query: string;
    intent: {
        name: string;
    };
    entities: Entity[];
    confidence?: number;
}
export interface IntentRequest extends BaseRequest<IntentRequestPayload> {
    type: RequestType.INTENT;
}
export interface GeneralRequest extends BaseRequest<ActionAndLabelRequestPayload> {
    type: string;
}
export interface ActionRequest extends BaseRequest<ActionAndLabelRequestPayload> {
    type: RequestType.ACTION;
}
export interface BaseRequestButton<T extends BaseRequest = BaseRequest> {
    name: string;
    request: T;
}
export interface TextRequestButton extends BaseRequestButton<TextRequest> {
}
export interface ActionRequestButton extends BaseRequestButton<ActionRequest> {
}
export interface IntentRequestButton extends BaseRequestButton<IntentRequest> {
}
export interface GeneralRequestButton extends BaseRequestButton<GeneralRequest> {
}
export declare type AnyRequestButton = TextRequestButton | IntentRequestButton | GeneralRequestButton | ActionRequestButton;
export interface NodeButton {
    /**
     * @deprecated Use buttons
     */
    chips?: Chip[];
    buttons?: AnyRequestButton[];
}
export declare const isTextRequest: (request: BaseRequest) => request is TextRequest;
export declare const isActionRequest: (request: BaseRequest) => request is ActionRequest;
export declare const isLaunchRequest: (request: BaseRequest) => request is LaunchRequest;
export declare const isIntentRequest: (request: BaseRequest) => request is IntentRequest;
export declare const isGeneralRequest: (request: BaseRequest) => request is GeneralRequest;
