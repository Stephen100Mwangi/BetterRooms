import * as s from 'superstruct';
import { Client, PublicClient } from "./client";
import type { FetchConfig } from "./fetch";
export { Client, PublicClient } from "./client";
export { UnknownRecord, ArrayElement, Flatten } from "./types";
export * from "./models";
export declare const SParams: s.Struct<{
    clientKey: string;
    apiEndpoint: string;
}, {
    clientKey: s.Struct<string, any>;
    apiEndpoint: s.Struct<string, any>;
}>;
export declare type Options = {
    options?: FetchConfig;
};
export declare type Params = s.StructType<typeof SParams> & Options;
export declare const SGenerateClientParams: s.Struct<{
    authorization: string;
}, any>;
declare class ApiSDK {
    private clientKey;
    private apiEndpoint;
    constructor({ clientKey, apiEndpoint }: Params);
    generatePublicClient({ options }?: Options): PublicClient;
    generateClient({ authorization, options }: s.StructType<typeof SGenerateClientParams> & Options): Client;
}
export default ApiSDK;
