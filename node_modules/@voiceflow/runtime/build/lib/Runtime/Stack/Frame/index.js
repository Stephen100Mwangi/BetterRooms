"use strict";
/**
 * Stack Frame documentation
 * @packageDocumentation
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Store_1 = __importDefault(require("../../Store"));
class Frame {
    constructor(frameState) {
        var _a, _b;
        this.initialized = false;
        this.startNodeID = null;
        this.commands = [];
        // if nodeID is null make sure it gets set to null, big difference between null and undefined
        if ('blockID' in frameState)
            this.nodeID = frameState.blockID;
        if ('nodeID' in frameState)
            this.nodeID = frameState.nodeID;
        this.programID = (_a = frameState.diagramID) !== null && _a !== void 0 ? _a : frameState.programID;
        this.storage = new Store_1.default(frameState.storage);
        this.commands = (_b = frameState.commands) !== null && _b !== void 0 ? _b : [];
        this.variables = new Store_1.default(frameState.variables);
    }
    getState() {
        return {
            nodeID: this.nodeID,
            programID: this.programID,
            storage: this.storage.getState(),
            commands: this.commands,
            variables: this.variables.getState(),
        };
    }
    initialize(program) {
        if (this.initialized) {
            return;
        }
        this.initialized = true;
        this.commands = program.getCommands();
        this.startNodeID = program.getStartNodeID();
        Store_1.default.initialize(this.variables, program.getVariables(), 0);
        if (this.nodeID === undefined) {
            this.nodeID = this.startNodeID;
        }
    }
    /**
     * Get the frame's node id.
     *
     * @remarks
     * Some remark for getNodeID().
     *
     * @returns the frame's node id
     *
     * @example
     * Here's a simple usage example
     * ```typescript
     *  const nodeID = frame.getNodeID();
     * ```
     */
    getNodeID() {
        return this.nodeID;
    }
    /**
     * Set the frame's node id.
     *
     * @remarks
     * Some remark for setNodeID().
     *
     * @param nodeID - the node id to set
     * @returns void
     *
     * @example
     * Here's a simple usage example
     * ```typescript
     *  const newNodeID = '123abc';
     *  frame.setNodeID(newNodeID);
     * ```
     */
    setNodeID(nodeID) {
        this.nodeID = nodeID;
    }
    getProgramID() {
        return this.programID;
    }
    setProgramID(programID) {
        this.programID = programID;
    }
    getCommands() {
        return this.commands;
    }
}
exports.default = Frame;
//# sourceMappingURL=index.js.map