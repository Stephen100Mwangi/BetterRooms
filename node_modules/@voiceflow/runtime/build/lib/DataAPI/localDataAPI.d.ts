/// <reference types="node" />
import { BasePlatformData, Program, Project, Version } from '@voiceflow/api-sdk';
import * as FS from 'fs';
import * as Path from 'path';
import { DataAPI } from './types';
declare class LocalDataAPI<P extends Program<any, any>, V extends Version<any>, PJ extends Project<any, any> = Project<BasePlatformData, BasePlatformData>> implements DataAPI<P, V, PJ> {
    private version;
    private project;
    private programs;
    constructor({ projectSource }: {
        projectSource: string;
    }, { fs, path }: {
        fs: typeof FS;
        path: typeof Path;
    });
    init: () => Promise<void>;
    getVersion: () => Promise<V>;
    getProgram: (programID: string) => Promise<P>;
    getProject: () => Promise<PJ>;
    fetchDisplayById: () => Promise<null>;
}
export default LocalDataAPI;
