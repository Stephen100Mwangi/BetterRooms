"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConditionsLogicInterface = exports.ExpressionTypeV2 = exports.ExpressionType = void 0;
var ExpressionType;
(function (ExpressionType) {
    ExpressionType["EQUALS"] = "equals";
    ExpressionType["GREATER"] = "greater";
    ExpressionType["LESS"] = "less";
    ExpressionType["AND"] = "and";
    ExpressionType["OR"] = "or";
    ExpressionType["VALUE"] = "value";
    ExpressionType["VARIABLE"] = "variable";
    ExpressionType["ADVANCE"] = "advance";
    // soon to be deprecated
    ExpressionType["PLUS"] = "plus";
    ExpressionType["MINUS"] = "minus";
    ExpressionType["TIMES"] = "times";
    ExpressionType["DIVIDE"] = "divide";
    ExpressionType["NOT"] = "not";
})(ExpressionType = exports.ExpressionType || (exports.ExpressionType = {}));
// new types
var ExpressionTypeV2;
(function (ExpressionTypeV2) {
    ExpressionTypeV2["EQUALS"] = "equals";
    ExpressionTypeV2["GREATER"] = "greater";
    ExpressionTypeV2["LESS"] = "less";
    ExpressionTypeV2["AND"] = "and";
    ExpressionTypeV2["OR"] = "or";
    ExpressionTypeV2["VALUE"] = "value";
    ExpressionTypeV2["VARIABLE"] = "variable";
    ExpressionTypeV2["ADVANCE"] = "advance";
    ExpressionTypeV2["NOT_EQUAL"] = "not_equal";
    ExpressionTypeV2["GREATER_OR_EQUAL"] = "greater_or_equal";
    ExpressionTypeV2["LESS_OR_EQUAL"] = "less_or_equal";
    ExpressionTypeV2["CONTAINS"] = "contains";
    ExpressionTypeV2["NOT_CONTAIN"] = "not_contain";
    ExpressionTypeV2["STARTS_WITH"] = "starts_with";
    ExpressionTypeV2["ENDS_WITH"] = "ends_with";
    ExpressionTypeV2["HAS_VALUE"] = "has_value";
    ExpressionTypeV2["IS_EMPTY"] = "is_empty";
})(ExpressionTypeV2 = exports.ExpressionTypeV2 || (exports.ExpressionTypeV2 = {}));
// New
var ConditionsLogicInterface;
(function (ConditionsLogicInterface) {
    ConditionsLogicInterface["VARIABLE"] = "variable";
    ConditionsLogicInterface["VALUE"] = "value";
    ConditionsLogicInterface["LOGIC_GROUP"] = "logic_group";
    ConditionsLogicInterface["EXPRESSION"] = "expression";
})(ConditionsLogicInterface = exports.ConditionsLogicInterface || (exports.ConditionsLogicInterface = {}));
//# sourceMappingURL=expression.js.map