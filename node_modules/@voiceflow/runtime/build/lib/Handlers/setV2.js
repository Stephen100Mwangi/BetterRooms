"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const build_1 = require("@voiceflow/general-types/build");
const code_1 = __importDefault(require("./code"));
const SetV2Handler = ({ safe } = {}) => ({
    canHandle: (node) => node.type === build_1.NodeType.SET_V2,
    handle: async (node, runtime, variables, program) => {
        const codeHandler = code_1.default({ safe });
        let code = `
        let evaluated;
    `;
        node.sets.forEach((set) => {
            if (!set.variable)
                return;
            if (!variables.has(set.variable)) {
                runtime.variables.set(set.variable, 0);
                variables.set(set.variable, 0);
            }
            code += `
            evaluated = eval(\`${set.expression}\`);
            ${set.variable} = !!evaluated || !Number.isNaN(evaluated) ? evaluated : undefined;
        `;
        });
        await codeHandler.handle({ code, id: 'PROGRAMMATICALLY-GENERATED-CODE-NODE', type: build_1.NodeType.CODE }, runtime, variables, program);
        return node.nextId || null;
    },
});
exports.default = SetV2Handler;
//# sourceMappingURL=setV2.js.map