import Voiceflow, { BasePlatformData, Client, Program, Project, Version } from '@voiceflow/api-sdk';
import { DataAPI } from './types';
declare class CreatorDataAPI<P extends Program<any, any>, V extends Version<any>, PJ extends Project<any, any> = Project<BasePlatformData, BasePlatformData>> implements DataAPI<P, V, PJ> {
    protected client: Client;
    private prototype;
    constructor({ endpoint, authorization, clientKey, prototype, }: {
        endpoint: string;
        authorization: string;
        clientKey?: string;
        prototype?: boolean;
    }, VFClient?: typeof Voiceflow);
    init: () => Promise<void>;
    fetchDisplayById: () => Promise<null>;
    getProgram: (programID: string) => Promise<P>;
    getVersion: (versionID: string) => Promise<V>;
    getProject: (projectID: string) => Promise<PJ>;
}
export default CreatorDataAPI;
