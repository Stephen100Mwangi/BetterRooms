"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.modelIDKey = void 0;
const models_1 = require("../models");
const crud_1 = __importDefault(require("./crud"));
const ENDPOINT = 'api-keys';
exports.modelIDKey = '_id';
class APIKeyResource extends crud_1.default {
    constructor(fetch, { resourceEndpoint = ENDPOINT } = {}) {
        super({
            fetch,
            clazz: APIKeyResource,
            schema: models_1.SAPIkey.schema,
            modelIDKey: exports.modelIDKey,
            resourceEndpoint,
        });
        // create and update have different requirements, skip validation for now, backend validates
        this._assertPutAndPostBody = () => null;
    }
    async get(id) {
        return super._getByID(id);
    }
    async create(workspaceID, body) {
        return (await super._post(Object.assign(Object.assign({}, body), { workspaceID })));
    }
    async update(id, body) {
        return super._put(id, body);
    }
    async delete(id) {
        return super._delete(id);
    }
}
exports.default = APIKeyResource;
//# sourceMappingURL=apiKey.js.map