"use strict";
/* eslint-disable @typescript-eslint/no-empty-interface */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SVersion = exports.sVersionFolder = exports.sVersionFolderItem = exports.sVersionFolderItemType = exports.VersionFolderItemType = exports.SVersionPrototype = exports.SVersionPrototypeSettings = exports.SVersionPrototypeData = exports.SVersionPrototypeContext = exports.SVersionPrototypeStackFrame = exports.SVersionPlatformData = exports.SVersionPlatformDataPublishing = exports.SVersionPlatformDataSettings = void 0;
const s = __importStar(require("superstruct"));
const utils_1 = require("../utils");
const shared_1 = require("./shared");
exports.SVersionPlatformDataSettings = s.object();
exports.SVersionPlatformDataPublishing = s.object();
// TODO: do not forget to add new field to the StrictVersionPlatformData union.
exports.SVersionPlatformData = utils_1.dynamicObject({
    slots: s.array(shared_1.SSlot),
    intents: s.array(shared_1.SIntent),
    settings: exports.SVersionPlatformDataSettings,
    publishing: exports.SVersionPlatformDataPublishing,
});
exports.SVersionPrototypeStackFrame = s.object({
    nodeID: s.optional(s.nullable(s.string())),
    programID: s.string(),
    storage: s.optional(s.object()),
    commands: s.optional(s.array(shared_1.SCommand)),
    variables: s.optional(s.object()),
});
exports.SVersionPrototypeContext = s.partial({
    turn: s.object(),
    stack: s.array(exports.SVersionPrototypeStackFrame),
    storage: s.object(),
    variables: s.object(),
});
exports.SVersionPrototypeData = s.object({
    name: s.string(),
    locales: s.array(s.string()),
});
exports.SVersionPrototypeSettings = s.object({
    layout: s.optional(s.string()),
    brandColor: s.optional(s.string()),
    brandImage: s.optional(s.string()),
    avatar: s.optional(s.string()),
    password: s.optional(s.string()),
    hasPassword: s.optional(s.boolean()),
    buttons: s.optional(s.string()),
});
exports.SVersionPrototype = s.object({
    data: exports.SVersionPrototypeData,
    model: shared_1.SPrototypeModel,
    context: exports.SVersionPrototypeContext,
    platform: shared_1.SPlatform,
    settings: exports.SVersionPrototypeSettings,
});
var VersionFolderItemType;
(function (VersionFolderItemType) {
    VersionFolderItemType["FOLDER"] = "FOLDER";
    VersionFolderItemType["DIAGRAM"] = "DIAGRAM";
})(VersionFolderItemType = exports.VersionFolderItemType || (exports.VersionFolderItemType = {}));
exports.sVersionFolderItemType = s.enums(Object.values(VersionFolderItemType));
exports.sVersionFolderItem = s.object({
    type: exports.sVersionFolderItemType,
    sourceID: s.string(),
});
exports.sVersionFolder = s.object({
    id: s.string(),
    name: s.string(),
    items: s.array(exports.sVersionFolderItem),
});
exports.SVersion = s.object({
    _id: shared_1.SVersionID,
    creatorID: shared_1.SCreatorID,
    projectID: shared_1.SProjectID,
    name: shared_1.SName,
    topics: s.optional(s.array(exports.sVersionFolderItem)),
    folders: s.optional(s.record(s.string(), exports.sVersionFolder)),
    variables: s.array(shared_1.SVariable),
    prototype: s.optional(exports.SVersionPrototype),
    components: s.optional(s.array(exports.sVersionFolderItem)),
    platformData: exports.SVersionPlatformData,
    rootDiagramID: shared_1.SDiagramID,
});
//# sourceMappingURL=version.js.map