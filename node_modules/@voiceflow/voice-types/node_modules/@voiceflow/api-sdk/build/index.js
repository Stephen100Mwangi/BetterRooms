"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SGenerateClientParams = exports.SParams = void 0;
const s = __importStar(require("superstruct"));
const client_1 = require("./client");
const publicclient_1 = require("./publicclient");
__exportStar(require("./models"), exports);
exports.SParams = s.object({
    clientKey: s.string(),
    apiEndpoint: s.string(),
});
exports.SGenerateClientParams = s.type({
    authorization: s.string(),
});
class ApiSDK {
    constructor({ clientKey, apiEndpoint }) {
        s.assert({ clientKey, apiEndpoint }, exports.SParams);
        this.clientKey = clientKey;
        this.apiEndpoint = apiEndpoint;
    }
    generatePublicClient(options = {}) {
        return new publicclient_1.PublicClient(Object.assign(Object.assign({}, options), { clientKey: this.clientKey, apiEndpoint: this.apiEndpoint }));
    }
    generateClient(options) {
        s.assert({ authorization: options.authorization }, exports.SGenerateClientParams);
        return new client_1.Client(Object.assign(Object.assign({}, options), { clientKey: this.clientKey, apiEndpoint: this.apiEndpoint }));
    }
}
exports.default = ApiSDK;
//# sourceMappingURL=index.js.map