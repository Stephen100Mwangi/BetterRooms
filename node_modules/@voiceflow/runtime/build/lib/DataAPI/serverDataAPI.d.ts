import { BasePlatformData, Program, Project, Version } from '@voiceflow/api-sdk';
import { AxiosInstance, AxiosStatic } from 'axios';
import { DataAPI, Display } from './types';
declare class ServerDataAPI<P extends Program<any, any>, V extends Version<any>, PJ extends Project<any, any> = Project<BasePlatformData, BasePlatformData>> implements DataAPI<P, V, PJ> {
    protected client: AxiosInstance;
    private axios;
    private platform;
    private dataEndpoint;
    private adminToken;
    constructor({ platform, adminToken, dataEndpoint }: {
        platform: string;
        adminToken: string;
        dataEndpoint: string;
    }, { axios }: {
        axios: AxiosStatic;
    });
    init: () => Promise<void>;
    fetchDisplayById: (displayId: number) => Promise<null | Display>;
    getProgram: (programID: string) => Promise<P>;
    getVersion: (versionID: string) => Promise<V>;
    getProject: (projectID: string) => Promise<PJ>;
}
export default ServerDataAPI;
